{
  "info": {
    "name": "Lesson 04 - Postman Variables and Chaining",
    "_postman_id": "unique-id-lesson-04",
    "description": "Week 04 - Demonstrating variable usage and request chaining in Postman.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "POST /posts - Create New Post",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"title\": \"Postman Test\",\n  \"body\": \"Learning variables!\",\n  \"userId\": 99\n}"
        },
        "url": {
          "raw": "https://jsonplaceholder.typicode.com/posts",
          "protocol": "https",
          "host": [
            "jsonplaceholder",
            "typicode",
            "com"
          ],
          "path": [
            "posts"
          ]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "const jsonData = pm.response.json();",
              "pm.environment.set(\"newPostId\", jsonData.id);",
              "pm.test(\"Status code is 201\", function () {",
              "    pm.response.to.have.status(201);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "GET /posts/:id - Retrieve Created Post",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "https://jsonplaceholder.typicode.com/posts/{{newPostId}}",
          "protocol": "https",
          "host": [
            "jsonplaceholder",
            "typicode",
            "com"
          ],
          "path": [
            "posts",
            "{{newPostId}}"
          ]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "const jsonData = pm.response.json();",
              "pm.test(\"Correct title\", function () {",
              "    pm.expect(jsonData.title).to.eql(\"Postman Test\");",
              "});",
              "pm.test(\"Correct userId\", function () {",
              "    pm.expect(jsonData.userId).to.eql(99);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    }
  ]
}